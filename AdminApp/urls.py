from django.urls import path
from AdminApp import views

urlpatterns = [
   path('dashboard', views.DashboardView.as_view()),
   path('dashboard/stock_overview', views.DashboardStockOverViewView.as_view()),
   path('dashboard/stock_overview/<str:id>', views.DashboardStockOverViewView.as_view()),
   path('dashboard/product_uses', views.DashboardProductUsesView.as_view()),
   path('dashboard/product_under_over', views.DashboardProductOverStockView.as_view()),
   path('products', views.ProductsView.as_view()),
   path('products/<str:id>', views.ProductsView.as_view()),
   path('racks', views.RacksView.as_view()),
   path('racks/<str:id>', views.RacksView.as_view()),
   path('product_stock/<str:id>', views.ProductsStockView.as_view()),
   path('perishable_stock', views.PerishableStockView.as_view()),
   path('stocks', views.StocksView.as_view()),
   path('stocks/<str:id>', views.StocksView.as_view()),
   path('stock_history', views.StockHistoryView.as_view()),
   path('stock_history/<str:id>', views.StockHistoryView.as_view()),
   path('barcode_stock_history/<str:barcode>', views.BarcodeStockHistoryView.as_view()),
   path('barcode', views.BarcodeView.as_view()),
   path('barcode_action/<str:barcode>', views.BarcodeActionView.as_view()),
   path('borrowed_stock', views.BorrowedStockView.as_view()),
   path('borrowed_stock/<str:source_id>', views.BorrowedStockView.as_view()),
   path('search/racks', views.SearchRacksView.as_view()),
   path('search/source', views.SearchSourceView.as_view()),
   path('search/employee', views.SearchEmployeeView.as_view()),
   path('search/purpose', views.SearchPurposeView.as_view()),
   path('search/product', views.SearchProductView.as_view()),
   path('search/material', views.SearchMaterialView.as_view()), # lable | value
   path('designation', views.DesignationView.as_view()),
   path('unit', views.UnitView.as_view()),
   path('source', views.SourceView.as_view()),
   path('employee', views.EmployeeView.as_view()),
   path('employee/<str:id>', views.EmployeeView.as_view()),
   path('product_category', views.ProductCategoryView.as_view()),

   # employee
   path('user', views.UserView.as_view()),
   path('user/<str:id>', views.UserView.as_view()),
   path('abc_analysis', views.ABCAnalysisView.as_view()),
   path('ved_analysis', views.VEDAnalysisView.as_view()),
   path('hml_analysis', views.HMLAnalysisView.as_view()),
   path('fsn_analysis', views.FSNAnalysisView.as_view()),
   path('sde_analysis', views.SDEAnalysisView.as_view()),
   path('stock_age_analysis', views.StockAgingAnalysisView.as_view()),
   #report
   path('report/material', views.ReportMeterial.as_view()),
   path('report/material_transaction', views.ReportMeterialTransaction.as_view()),
   path('report/most_receive_move_item', views.ReportFastReceiveMovingItem.as_view()),
   path('report/critical_reorder_item', views.ReportCrirticalReorderItem.as_view()),
   path('report/employee', views.ReportEmployee.as_view()),
   path('report/material_usage', views.ReportMaterialUsage.as_view()),
   path('report/dead_stock_item', views.ReportDeadStockItem.as_view()),
   path('report/inventory_exception', views.ReportInventoryException.as_view()),
   #forecast
   path('product_forecast', views.ProductForecastView.as_view()),
   path('product_forecast/<str:id>', views.ProductForecastView.as_view()),
   path('top_product_forecast', views.TopProductForecastView.as_view()),
   path('instant_send_daily_report', views.InstantSendDailyReportView.as_view()),
]
