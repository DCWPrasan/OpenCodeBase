# Generated by Django 4.1.7 on 2025-04-16 18:12

import datetime
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('AdminApp', '0008_alter_repairlabjob_information_given_department_date_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='automationjob',
            name='date',
            field=models.DateField(default=datetime.date(2025, 4, 16)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='automationjob',
            name='present_staffs',
            field=models.ManyToManyField(related_name='automation_present_staffs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='automationjob',
            name='shift',
            field=models.CharField(choices=[('General Shift', 'GENERAL SHIFT'), ('A Shift', 'A SHIFT'), ('B Shift', 'B SHIFT'), ('C Shift', 'C SHIFT')], default=datetime.date(2025, 4, 16), max_length=15),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='automationjob',
            name='supporting_staff',
            field=models.CharField(default=datetime.date(2025, 4, 16), max_length=250, verbose_name='Supporting Staff'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='weighingmaintenancejob',
            name='weighbridge_location',
            field=models.CharField(choices=[('20T M-17 SWPP PF WB', '20T M-17 SWPP PF WB'), ('AB-BAY STATIC RAIL WB PF-A/B/C', 'AB-BAY STATIC RAIL WB PF-A/B/C'), ('BC-BAY STATIC RAIL WB PF-A/B/C', 'BC-BAY STATIC RAIL WB PF-A/B/C'), ('CD-BAY STATIC RAIL WB', 'CD-BAY STATIC RAIL WB'), ('CEMENT STORE 40T ROAD WB', 'CEMENT STORE 40T ROAD WB'), ('CRM 30T RS-BAY(SHIPPING) PF WB', 'CRM 30T RS-BAY(SHIPPING) PF WB'), ('GRILL GATE 150T RAIL I/M WB LINE#241', 'GRILL GATE 150T RAIL I/M WB LINE#241'), ('GRILL GATE 150T RAIL I/M WB LINE#243', 'GRILL GATE 150T RAIL I/M WB LINE#243'), ('HK GATE(NEW) 40T ROAD WB', 'HK GATE(NEW) 40T ROAD WB'), ('HK GATE(OLD) 50T ROAD WB', 'HK GATE(OLD) 50T ROAD WB'), ('HM 200T STATIC RAIL WB PCM LINE', 'HM 200T STATIC RAIL WB PCM LINE'), ('HM 250T STATIC RAIL WB PF-A', 'HM 250T STATIC RAIL WB PF-A'), ('HM 250T STATIC RAIL WB PF-B', 'HM 250T STATIC RAIL WB PF-B'), ('HM 800T STATIC RAIL WB LINE#1 WB-1 & WB-2', 'HM 800T STATIC RAIL WB LINE#1 WB-1 & WB-2'), ('HM 800T STATIC RAIL WB LINE#2 WB-1 & WB-2', 'HM 800T STATIC RAIL WB LINE#2 WB-1 & WB-2'), ('HSM-1 30T NEW DIVIDING LINE PF WB', 'HSM-1 30T NEW DIVIDING LINE PF WB'), ('HSM-2 COIL CONVEYER WEIGHING SYS.', 'HSM-2 COIL CONVEYER WEIGHING SYS.'), ('HSM-2 COIL YARD PF WB-1', 'HSM-2 COIL YARD PF WB-1'), ('HSM-2 COIL YARD PF WB-2', 'HSM-2 COIL YARD PF WB-2'), ('HSM-2 SSL PF WB-3', 'HSM-2 SSL PF WB-3'), ('NCCY 140T RAIL I/M WB', 'NCCY 140T RAIL I/M WB'), ('NEW SGP GATE 100T ROAD WB', 'NEW SGP GATE 100T ROAD WB'), ('NEW TARAPUR GATE 100T ROAD WB', 'NEW TARAPUR GATE 100T ROAD WB'), ('NPM 100T ROAD WB-1', 'NPM 100T ROAD WB-1'), ('NPM 100T ROAD WB-2', 'NPM 100T ROAD WB-2'), ('NPM STATIC RAIL WB PF-A/B/C', 'NPM STATIC RAIL WB PF-A/B/C'), ('OTHERS', 'OTHERS'), ('RECEPTION YARD 150T RAIL I/M WB-1', 'RECEPTION YARD 150T RAIL I/M WB-1'), ('RECEPTION YARD 150T RAIL I/M WB-2', 'RECEPTION YARD 150T RAIL I/M WB-2'), ('SSD 100T ROAD WB', 'SSD 100T ROAD WB'), ('SSD 140T RAIL I/M WB', 'SSD 140T RAIL I/M WB'), ('SSM 20T HJ-BAY PF WB', 'SSM 20T HJ-BAY PF WB'), ('SSM 20T JK-BAY PF WB', 'SSM 20T JK-BAY PF WB'), ('SSSY 100T ROAD WB', 'SSSY 100T ROAD WB'), ('SSSY 60T ROAD WB', 'SSSY 60T ROAD WB')], max_length=250, verbose_name='Location of Weighbridge'),
        ),
        migrations.AlterField(
            model_name='weighingoperationjob',
            name='commodity',
            field=models.CharField(choices=[('TEST', 'TEST'), ('COAL', 'COAL'), ('SILICO MANGANEESE', 'SILICO MANGANEESE'), ('HARDCOKE', 'HARDCOKE'), ('LD SLAG', 'LD SLAG'), ('BF FINES', 'BF FINES'), ('SCRAP', 'SCRAP'), ('LD FINES', 'LD FINES'), ('MISCLANEOUS', 'MISCLANEOUS'), ('SINTER', 'SINTER'), ('SLAG', 'SLAG'), ('IRON ORE', 'IRON ORE'), ('G. SLAG', 'G. SLAG'), ('IRON ORE LUMPS', 'IRON ORE LUMPS'), ('EMPTY', 'EMPTY'), ('LIMESTONE', 'LIMESTONE'), ('QUARTZ', 'QUARTZ'), ('DOLOMITE', 'DOLOMITE'), ('IRON ORE PELLET', 'IRON ORE PELLET'), ('MANGANEESE ORE', 'MANGANEESE ORE'), ('LD FINES & BF FINES', 'LD FINES & BF FINES'), ('HARDCOKE,MBC,MIXED HARD', 'HARDCOKE,MBC,MIXED HARD'), ('BREEZE COKE', 'BREEZE COKE'), ('LIMESTONE SONU', 'LIMESTONE SONU'), ('IRON ORE FINES', 'IRON ORE FINES'), ('BOILER COAL', 'BOILER COAL'), ('OTHERS', 'OTHERS')], max_length=250, verbose_name='Location of Weighbridge'),
        ),
        migrations.AlterField(
            model_name='weighingoperationjob',
            name='source',
            field=models.CharField(choices=[('ACCJ', 'ACCJ'), ('ANDAL', 'ANDAL'), ('ASANSOL', 'ASANSOL'), ('B&CS', 'B&CS'), ('BACHRA', 'BACHRA'), ('BARSUA', 'BARSUA'), ('BASRA', 'BASRA'), ('BBLS', 'BBLS'), ('BCME', 'BCME'), ('BCNA', 'BCNA'), ('BCNEMPTY', 'BCNEMPTY'), ('BCLP', 'BCLP'), ('BELHA DOLO', 'BELHA DOLO'), ('BHP', 'BHP'), ('BHARDWAR', 'BHARDWAR'), ('BHUJUDI', 'BHUJUDI'), ('BOCM', 'BOCM'), ('BOCP', 'BOCP'), ('BOCPJ', 'BOCPJ'), ('BRMP', 'BRMP'), ('BSPC', 'BSPC'), ('BSCE', 'BSCE'), ('BSCS', 'BSCS'), ('BSPE', 'BSPE'), ('BUBLI', 'BUBLI'), ('BUA', 'BUA'), ('CDA', 'CDA'), ('CHAINPURA', 'CHAINPURA'), ('CHANDERPUR', 'CHANDERPUR'), ('CHRM', 'CHRM'), ('DCDL', 'DCDL'), ('DCSD', 'DCSD'), ('DHAMARA', 'DHAMARA'), ('DGCW', 'DGCW'), ('DPCP', 'DPCP'), ('DPEY', 'DPEY'), ('DSEY', 'DSEY'), ('DUGDHA', 'DUGDHA'), ('DURGAPUR', 'DURGAPUR'), ('FSNL', 'FSNL'), ('GERMAN', 'GERMAN'), ('GFMK', 'GFMK'), ('HALDIA', 'HALDIA'), ('JABADABA', 'JABADABA'), ('JBCT', 'JBCT'), ('JBO', 'JBO'), ('JCPP', 'JCPP'), ('JDWS', 'JDWS'), ('KATRA', 'KATRA'), ('KCKT', 'KCKT'), ('KFNT', 'KFNT'), ('KIRIBURU', 'KIRIBURU'), ('KJME', 'KJME'), ('KMME', 'KMME'), ('KONICA', 'KONICA'), ('KPDOCK', 'KPDOCK'), ('KTH', 'KTH'), ('KSBJ', 'KSBJ'), ('KSNT', 'KSNT'), ('KTO', 'KTO'), ('KTN', 'KTN'), ('LAIKERA', 'LAIKERA'), ('LNC', 'LNC'), ('LOCM', 'LOCM'), ('MADHUBAN', 'MADHUBAN'), ('MDBN', 'MDBN'), ('MELG', 'MELG'), ('MFSJ', 'MFSJ'), ('MISCLANEOUS', 'MISCLANEOUS'), ('MLD', 'MLD'), ('MLTC', 'MLTC'), ('MGPB', 'MGPB'), ('MGPV', 'MGPV'), ('MOCL', 'MOCL'), ('MUNIDIHI', 'MUNIDIHI'), ('NANDAN', 'NANDAN'), ('NHSB', 'NHSB'), ('NJTC', 'NJTC'), ('NMC', 'NMC'), ('OCIG', 'OCIG'), ('OTHERS', 'OTHERS'), ('PATHARDIHI', 'PATHARDIHI'), ('PAW', 'PAW'), ('PBJT', 'PBJT'), ('PBCP', 'PBCP'), ('PCLE', 'PCLE'), ('PCME', 'PCME'), ('PBLF', 'PBLF'), ('PBRP', 'PBRP'), ('PSEC', 'PSEC'), ('PSCE', 'PSCE'), ('PSMM', 'PSMM'), ('PSTE', 'PSTE'), ('RAJARAPPA', 'RAJARAPPA'), ('RANI GANJ', 'RANI GANJ'), ('RAY', 'RAY'), ('RJCB', 'RJCB'), ('ROXL', 'ROXL'), ('ROXY', 'ROXY'), ('RSP', 'RSP'), ('RWR', 'RWR'), ('SAMLA SIDEING', 'SAMLA SIDEING'), ('SARDEGA', 'SARDEGA'), ('SARUBERA', 'SARUBERA'), ('SCSK', 'SCSK'), ('SCSC', 'SCSC'), ('SGP', 'SGP'), ('SMPR', 'SMPR'), ('SNFC', 'SNFC'), ('SNWG', 'SNWG'), ('SONU', 'SONU'), ('SWANG', 'SWANG'), ('TAPASI', 'TAPASI'), ('TARACIA', 'TARACIA'), ('TEST CAR', 'TEST CAR'), ('TSBD', 'TSBD'), ('UCPD', 'UCPD'), ('UPCD', 'UPCD'), ('VIZAG', 'VIZAG'), ('VNHL', 'VNHL'), ('VZP', 'VZP')], max_length=250, verbose_name='source/Consignor'),
        ),
        migrations.CreateModel(
            name='CCTVJob',
            fields=[
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('shift', models.CharField(choices=[('General Shift', 'GENERAL SHIFT'), ('A Shift', 'A SHIFT'), ('B Shift', 'B SHIFT'), ('C Shift', 'C SHIFT')], max_length=15)),
                ('supporting_staff', models.CharField(max_length=250, verbose_name='Supporting Staff')),
                ('complain_site', models.CharField(max_length=250, verbose_name='Complain Site')),
                ('complain_received_time', models.DateTimeField(verbose_name='Complain Received Time')),
                ('complain_nature', models.TextField(verbose_name='Nature of Complain')),
                ('complain_details', models.TextField(verbose_name='Details of Complain')),
                ('action_taken', models.TextField(verbose_name='Action Taken')),
                ('completion_time', models.DateTimeField(verbose_name='Completion Time')),
                ('remarks', models.TextField(verbose_name='Remarks')),
                ('present_staffs', models.ManyToManyField(related_name='cctv_jobs_present', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
